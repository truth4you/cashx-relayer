// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class OrderCancelled extends ethereum.Event {
  get params(): OrderCancelled__Params {
    return new OrderCancelled__Params(this);
  }
}

export class OrderCancelled__Params {
  _event: OrderCancelled;

  constructor(event: OrderCancelled) {
    this._event = event;
  }

  get orderId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }
}

export class OrderCreated extends ethereum.Event {
  get params(): OrderCreated__Params {
    return new OrderCreated__Params(this);
  }
}

export class OrderCreated__Params {
  _event: OrderCreated;

  constructor(event: OrderCreated) {
    this._event = event;
  }

  get orderId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get amountIn(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get tokenIn(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get tokenOut(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get numOfOrders(): i32 {
    return this._event.parameters[4].value.toI32();
  }

  get interval(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get user(): Address {
    return this._event.parameters[6].value.toAddress();
  }
}

export class OrderExecuted extends ethereum.Event {
  get params(): OrderExecuted__Params {
    return new OrderExecuted__Params(this);
  }
}

export class OrderExecuted__Params {
  _event: OrderExecuted;

  constructor(event: OrderExecuted) {
    this._event = event;
  }

  get orderId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get subOrderId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get amountIn(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get amountOut(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get rate(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class OrderFailed extends ethereum.Event {
  get params(): OrderFailed__Params {
    return new OrderFailed__Params(this);
  }
}

export class OrderFailed__Params {
  _event: OrderFailed;

  constructor(event: OrderFailed) {
    this._event = event;
  }

  get orderId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }
}

export class OrderFilled extends ethereum.Event {
  get params(): OrderFilled__Params {
    return new OrderFilled__Params(this);
  }
}

export class OrderFilled__Params {
  _event: OrderFilled;

  constructor(event: OrderFilled) {
    this._event = event;
  }

  get orderId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get amountIn(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class OrderPushed extends ethereum.Event {
  get params(): OrderPushed__Params {
    return new OrderPushed__Params(this);
  }
}

export class OrderPushed__Params {
  _event: OrderPushed;

  constructor(event: OrderPushed) {
    this._event = event;
  }

  get order(): OrderPushedOrderStruct {
    return this._event.parameters[0].value.toTuple() as OrderPushedOrderStruct;
  }
}

export class OrderPushedOrderStruct extends ethereum.Tuple {
  get orderId(): Bytes {
    return this[0].toBytes();
  }

  get amountIn(): BigInt {
    return this[1].toBigInt();
  }

  get path(): Array<Address> {
    return this[2].toAddressArray();
  }

  get user(): Address {
    return this[3].toAddress();
  }

  get interval(): BigInt {
    return this[4].toBigInt();
  }

  get lastSwapDate(): BigInt {
    return this[5].toBigInt();
  }

  get remaining(): BigInt {
    return this[6].toBigInt();
  }

  get swapsLeft(): i32 {
    return this[7].toI32();
  }

  get numOfOrders(): i32 {
    return this[8].toI32();
  }

  get minPrice(): BigInt {
    return this[9].toBigInt();
  }

  get maxPrice(): BigInt {
    return this[10].toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Unpaused extends ethereum.Event {
  get params(): Unpaused__Params {
    return new Unpaused__Params(this);
  }
}

export class Unpaused__Params {
  _event: Unpaused;

  constructor(event: Unpaused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class NineInchDCA__checkUpkeepResult {
  value0: boolean;
  value1: Bytes;

  constructor(value0: boolean, value1: Bytes) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromBoolean(this.value0));
    map.set("value1", ethereum.Value.fromBytes(this.value1));
    return map;
  }
}

export class NineInchDCA__getBatchResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }
}

export class NineInchDCA__getOrderResultValue0Struct extends ethereum.Tuple {
  get orderId(): Bytes {
    return this[0].toBytes();
  }

  get amountIn(): BigInt {
    return this[1].toBigInt();
  }

  get path(): Array<Address> {
    return this[2].toAddressArray();
  }

  get user(): Address {
    return this[3].toAddress();
  }

  get interval(): BigInt {
    return this[4].toBigInt();
  }

  get lastSwapDate(): BigInt {
    return this[5].toBigInt();
  }

  get remaining(): BigInt {
    return this[6].toBigInt();
  }

  get swapsLeft(): i32 {
    return this[7].toI32();
  }

  get numOfOrders(): i32 {
    return this[8].toI32();
  }

  get minPrice(): BigInt {
    return this[9].toBigInt();
  }

  get maxPrice(): BigInt {
    return this[10].toBigInt();
  }
}

export class NineInchDCA__getPriceResult {
  value0: boolean;
  value1: BigInt;

  constructor(value0: boolean, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromBoolean(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }
}

export class NineInchDCA extends ethereum.SmartContract {
  static bind(address: Address): NineInchDCA {
    return new NineInchDCA("NineInchDCA", address);
  }

  checkUpkeep(checkData: Bytes): NineInchDCA__checkUpkeepResult {
    let result = super.call("checkUpkeep", "checkUpkeep(bytes):(bool,bytes)", [
      ethereum.Value.fromBytes(checkData)
    ]);

    return new NineInchDCA__checkUpkeepResult(
      result[0].toBoolean(),
      result[1].toBytes()
    );
  }

  try_checkUpkeep(
    checkData: Bytes
  ): ethereum.CallResult<NineInchDCA__checkUpkeepResult> {
    let result = super.tryCall(
      "checkUpkeep",
      "checkUpkeep(bytes):(bool,bytes)",
      [ethereum.Value.fromBytes(checkData)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new NineInchDCA__checkUpkeepResult(
        value[0].toBoolean(),
        value[1].toBytes()
      )
    );
  }

  getBatch(): NineInchDCA__getBatchResult {
    let result = super.call("getBatch", "getBatch():(uint256,uint256)", []);

    return new NineInchDCA__getBatchResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_getBatch(): ethereum.CallResult<NineInchDCA__getBatchResult> {
    let result = super.tryCall("getBatch", "getBatch():(uint256,uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new NineInchDCA__getBatchResult(value[0].toBigInt(), value[1].toBigInt())
    );
  }

  getOrder(orderId: Bytes): NineInchDCA__getOrderResultValue0Struct {
    let result = super.call(
      "getOrder",
      "getOrder(bytes32):((bytes32,uint256,address[],address,uint256,uint256,uint256,uint8,uint8,uint256,uint256))",
      [ethereum.Value.fromFixedBytes(orderId)]
    );

    return result[0].toTuple() as NineInchDCA__getOrderResultValue0Struct;
  }

  try_getOrder(
    orderId: Bytes
  ): ethereum.CallResult<NineInchDCA__getOrderResultValue0Struct> {
    let result = super.tryCall(
      "getOrder",
      "getOrder(bytes32):((bytes32,uint256,address[],address,uint256,uint256,uint256,uint8,uint8,uint256,uint256))",
      [ethereum.Value.fromFixedBytes(orderId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTuple() as NineInchDCA__getOrderResultValue0Struct
    );
  }

  getOrderAt(index: BigInt): Bytes {
    let result = super.call("getOrderAt", "getOrderAt(uint256):(bytes32)", [
      ethereum.Value.fromUnsignedBigInt(index)
    ]);

    return result[0].toBytes();
  }

  try_getOrderAt(index: BigInt): ethereum.CallResult<Bytes> {
    let result = super.tryCall("getOrderAt", "getOrderAt(uint256):(bytes32)", [
      ethereum.Value.fromUnsignedBigInt(index)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getPrice(
    amountIn: BigInt,
    path: Array<Address>
  ): NineInchDCA__getPriceResult {
    let result = super.call(
      "getPrice",
      "getPrice(uint256,address[]):(bool,uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(amountIn),
        ethereum.Value.fromAddressArray(path)
      ]
    );

    return new NineInchDCA__getPriceResult(
      result[0].toBoolean(),
      result[1].toBigInt()
    );
  }

  try_getPrice(
    amountIn: BigInt,
    path: Array<Address>
  ): ethereum.CallResult<NineInchDCA__getPriceResult> {
    let result = super.tryCall(
      "getPrice",
      "getPrice(uint256,address[]):(bool,uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(amountIn),
        ethereum.Value.fromAddressArray(path)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new NineInchDCA__getPriceResult(value[0].toBoolean(), value[1].toBigInt())
    );
  }

  keeper(): Address {
    let result = super.call("keeper", "keeper():(address)", []);

    return result[0].toAddress();
  }

  try_keeper(): ethereum.CallResult<Address> {
    let result = super.tryCall("keeper", "keeper():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  totalOrders(): BigInt {
    let result = super.call("totalOrders", "totalOrders():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalOrders(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("totalOrders", "totalOrders():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get routerAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _keeper(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _feeWallet(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class CancelOrderCall extends ethereum.Call {
  get inputs(): CancelOrderCall__Inputs {
    return new CancelOrderCall__Inputs(this);
  }

  get outputs(): CancelOrderCall__Outputs {
    return new CancelOrderCall__Outputs(this);
  }
}

export class CancelOrderCall__Inputs {
  _call: CancelOrderCall;

  constructor(call: CancelOrderCall) {
    this._call = call;
  }

  get orderId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class CancelOrderCall__Outputs {
  _call: CancelOrderCall;

  constructor(call: CancelOrderCall) {
    this._call = call;
  }
}

export class CreateOrderCall extends ethereum.Call {
  get inputs(): CreateOrderCall__Inputs {
    return new CreateOrderCall__Inputs(this);
  }

  get outputs(): CreateOrderCall__Outputs {
    return new CreateOrderCall__Outputs(this);
  }
}

export class CreateOrderCall__Inputs {
  _call: CreateOrderCall;

  constructor(call: CreateOrderCall) {
    this._call = call;
  }

  get amountIn_(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get path_(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }

  get interval_(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get numOfOrders_(): i32 {
    return this._call.inputValues[3].value.toI32();
  }

  get priceRange_(): Array<BigInt> {
    return this._call.inputValues[4].value.toBigIntArray();
  }
}

export class CreateOrderCall__Outputs {
  _call: CreateOrderCall;

  constructor(call: CreateOrderCall) {
    this._call = call;
  }
}

export class ForceCancelOrderCall extends ethereum.Call {
  get inputs(): ForceCancelOrderCall__Inputs {
    return new ForceCancelOrderCall__Inputs(this);
  }

  get outputs(): ForceCancelOrderCall__Outputs {
    return new ForceCancelOrderCall__Outputs(this);
  }
}

export class ForceCancelOrderCall__Inputs {
  _call: ForceCancelOrderCall;

  constructor(call: ForceCancelOrderCall) {
    this._call = call;
  }

  get orderId_(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class ForceCancelOrderCall__Outputs {
  _call: ForceCancelOrderCall;

  constructor(call: ForceCancelOrderCall) {
    this._call = call;
  }
}

export class PauseCall extends ethereum.Call {
  get inputs(): PauseCall__Inputs {
    return new PauseCall__Inputs(this);
  }

  get outputs(): PauseCall__Outputs {
    return new PauseCall__Outputs(this);
  }
}

export class PauseCall__Inputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PauseCall__Outputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PerformUpkeepCall extends ethereum.Call {
  get inputs(): PerformUpkeepCall__Inputs {
    return new PerformUpkeepCall__Inputs(this);
  }

  get outputs(): PerformUpkeepCall__Outputs {
    return new PerformUpkeepCall__Outputs(this);
  }
}

export class PerformUpkeepCall__Inputs {
  _call: PerformUpkeepCall;

  constructor(call: PerformUpkeepCall) {
    this._call = call;
  }

  get performData(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class PerformUpkeepCall__Outputs {
  _call: PerformUpkeepCall;

  constructor(call: PerformUpkeepCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UnpauseCall extends ethereum.Call {
  get inputs(): UnpauseCall__Inputs {
    return new UnpauseCall__Inputs(this);
  }

  get outputs(): UnpauseCall__Outputs {
    return new UnpauseCall__Outputs(this);
  }
}

export class UnpauseCall__Inputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UnpauseCall__Outputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UpdateFeeCall extends ethereum.Call {
  get inputs(): UpdateFeeCall__Inputs {
    return new UpdateFeeCall__Inputs(this);
  }

  get outputs(): UpdateFeeCall__Outputs {
    return new UpdateFeeCall__Outputs(this);
  }
}

export class UpdateFeeCall__Inputs {
  _call: UpdateFeeCall;

  constructor(call: UpdateFeeCall) {
    this._call = call;
  }

  get _fee(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UpdateFeeCall__Outputs {
  _call: UpdateFeeCall;

  constructor(call: UpdateFeeCall) {
    this._call = call;
  }
}

export class UpdateFeeWalletCall extends ethereum.Call {
  get inputs(): UpdateFeeWalletCall__Inputs {
    return new UpdateFeeWalletCall__Inputs(this);
  }

  get outputs(): UpdateFeeWalletCall__Outputs {
    return new UpdateFeeWalletCall__Outputs(this);
  }
}

export class UpdateFeeWalletCall__Inputs {
  _call: UpdateFeeWalletCall;

  constructor(call: UpdateFeeWalletCall) {
    this._call = call;
  }

  get _feeWallet(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpdateFeeWalletCall__Outputs {
  _call: UpdateFeeWalletCall;

  constructor(call: UpdateFeeWalletCall) {
    this._call = call;
  }
}

export class UpdateKeeperCall extends ethereum.Call {
  get inputs(): UpdateKeeperCall__Inputs {
    return new UpdateKeeperCall__Inputs(this);
  }

  get outputs(): UpdateKeeperCall__Outputs {
    return new UpdateKeeperCall__Outputs(this);
  }
}

export class UpdateKeeperCall__Inputs {
  _call: UpdateKeeperCall;

  constructor(call: UpdateKeeperCall) {
    this._call = call;
  }

  get _keeper(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpdateKeeperCall__Outputs {
  _call: UpdateKeeperCall;

  constructor(call: UpdateKeeperCall) {
    this._call = call;
  }
}

export class UpdateRouterCall extends ethereum.Call {
  get inputs(): UpdateRouterCall__Inputs {
    return new UpdateRouterCall__Inputs(this);
  }

  get outputs(): UpdateRouterCall__Outputs {
    return new UpdateRouterCall__Outputs(this);
  }
}

export class UpdateRouterCall__Inputs {
  _call: UpdateRouterCall;

  constructor(call: UpdateRouterCall) {
    this._call = call;
  }

  get _router(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpdateRouterCall__Outputs {
  _call: UpdateRouterCall;

  constructor(call: UpdateRouterCall) {
    this._call = call;
  }
}
